#
# Template.env
#
# When running the app locally, this file should be copied to .env
#

# This is a long, unique string of characters that is used for Django's cryptographic signing
SECRET_KEY=

# A list of domains and/or IPs that Django is allowed to serve
DJANGO_ALLOWED_HOSTS=localhost 127:0.0.1 [::1]

#
# Database Configuration
#

# The Django module used for managing the database connection.
# If not provided, Django will default to SQLite
SQL_ENGINE=django.db.backends.postgresql

# The name of the database (or, for sqlite, the name of the file) that Django should use
# I not provided, it defaults to db.sqlite3
SQL_DATABASE=

# The username used to authenticate with the database
# defaults to "user"
SQL_USER=

# The password used to authenticate with the database
# defaults to "password"
SQL_PASSWORD=

# The hostname used to connect to the database
# defaults to "localhost"
SQL_HOST=db

# The port on which the database is listening
# defaults to 5432
SQL_PORT=5432

# A flag for the entrypoint.sh script
# If this value is "postgres", the script will wait for the database to be available before running the app
DATABASE=postgres

#
# Superuser Configuration
#
# When starting up the Django process, a superuser with full access to the admin will be created.
# When running in production, make sure that these are secure values
#

# This will be the superuser login name
DJANGO_SUPERUSER_USERNAME=

# This will be the superuser password
DJANGO_SUPERUSER_PASSWORD=

# This will be the email account associated with the Superuser
DJANGO_SUPERUSER_EMAIL=

#
# Algolia Configuration
#
# Most of these details can be found under the "API Keys" in the Algolia Dashboard
#

# The ID of the Algolia application that owns the index and API key used here, typically a 10-character string.
ALGOLIA_APP_ID=

# The ID of the Algolia index that will be used. This should be owned by the account associated with the APP_ID above
# It is strongly recommended to use different indices for development, production, and testing
ALGOLIA_INDEX=

# A secured API Key created on Algolia.
# This key should have the browse, addObject, deleteObject, and deleteIndex permissions for the index specified above.
#
#NOTE: THIS SHOULD NOT BE AN ADMIN KEY.
# See: https://www.algolia.com/doc/guides/security/api-keys/
ALGOLIA_API_KEY=
